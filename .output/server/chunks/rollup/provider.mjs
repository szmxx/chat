import{html as t}from"satori-html";import{Buffer as r}from"node:buffer";import{b as s,r as e,a as i,t as a}from"../utils.mjs";import{M as o,I as p,u as n}from"../../index.mjs";import h from"image-size";import{d as l}from"../utils-pure.mjs";import{Resvg as c}from"@resvg/resvg-js";import f from"satori";const m={};async function u(t,r,s){if(t.props?.children){if(Array.isArray(t.props.children)&&0===t.props.children.length)return void delete t.props.children;for(const e of t.props.children||[])if(e){for(const t of r.flat())t.filter(e)&&await t.transform(e,s);await u(e,r,s)}}}const g={filter:t=>"img"===t.type,transform:async(t,s)=>{const e=t.props?.src;if(e&&e.startsWith("/")){let o=!1;const n=await i(e);let l;if(n&&(t.props.src=n.src,l={width:n.width,height:n.height},o=!0),!o){let i=!0;const p=await globalThis.$fetch(e,{responseType:"arrayBuffer",baseURL:s.requestOrigin}).catch((()=>{i=!1}));if(i){t.props.src=a(e,p);const s=await h(r.from(p));l={width:s.width,height:s.height},o=!0}}if(l?.width&&l?.height){const r=l.width/l.height;t.props.width&&!t.props.height?t.props.height=Math.round(t.props.width/r):t.props.height&&!t.props.width?t.props.width=Math.round(t.props.height*r):!t.props.width&&!t.props.height&&(t.props.width=l.width,t.props.height=l.height)}o||(t.props.src=`${p(e,`${s.requestOrigin}`)}?${Date.now()}`)}}},d={filter:t=>!!t.props?.class&&!t.props?.tw,transform:async t=>{t.props.tw=t.props.class}},w={filter:t=>"div"===t.type&&Array.isArray(t.props?.children)&&t.props?.children.length>=1&&!t.props.style?.display&&!t.props?.class?.includes("hidden"),transform:async t=>{t.props.style=t.props.style||{},t.props.style.display="flex",t.props?.class?.includes("flex-")||(t.props.style.flexDirection="column")}};function y(t){return"img"===t.type&&t.props?.class?.includes("emoji")}const b=[{filter:t=>"div"===t.type&&Array.isArray(t.props?.children)&&t.props.children.some(y),transform:async t=>{t.props.style=t.props.style||{},t.props.style.display="flex",t.props.style.alignItems="center"}},{filter:y,transform:async t=>{t.props.style=t.props.style||{},t.props.style.height="1em",t.props.style.width="1em",t.props.style.margin="0 .3em 0 .3em",t.props.style.verticalAlign="0.1em",t.props.class=""}}],$={filter:t=>"string"==typeof t.props?.children,transform:async t=>{t.props.children=l(t.props.children)}};async function N(t,r){return new c(t,r).render().asPng()}function D(t,r){return f(t,r)}const v=[];let x=null;function J(t,i){return x||(x=Promise.all(i.map((i=>async function(t,i){const a=`${i.name}:${i.weight}`,p=`assets:nuxt-og-image:font:${a}`;if(m[a])return m[a];const[n,h]=a.split(":");let l;if(await o().hasItem(p)&&(l=s(await o().getItem(p))),!l&&"Inter"===n&&["400","700"].includes(h)&&(l=await e(`/inter-latin-ext-${h}-normal.woff`)),i.path&&(l=await e(i.path),!l))try{l=await globalThis.$fetch(i.path,{responseType:"arrayBuffer",baseURL:t})}catch{}if(!l){const t=await globalThis.$fetch("/api/og-image-font",{query:{name:n,weight:h}});l=await globalThis.$fetch(t,{responseType:"arrayBuffer"})}return m[a]={name:n,weight:Number(h),data:l,style:"normal"},await o().setItem(p,r.from(l).toString("base64")),m[a]}(t,i)))))}const T={name:"satori",createPng:async function(t){const r=await this.createSvg(t);return(await N)(r,t)},createVNode:async function(r){const s=(await globalThis.$fetch("/api/og-image-html",{params:{path:r.path,options:JSON.stringify(r)}})).match(/<body[^>]*>([\s\S]*)<\/body>/)?.[1]||"",e=t(s);return await u(e,[b,d,g,w,$],r),e},createSvg:async function(t){const{fonts:r,satoriOptions:s}=n()["nuxt-og-image"],e=await this.createVNode(t);return v.length||v.push(...await J(t.requestOrigin,r)),await(await D)(e,{...s,fonts:v,embedFont:!0,width:t.width,height:t.height})}};async function U(t){return"satori"===t?T:null}export{U as u};
